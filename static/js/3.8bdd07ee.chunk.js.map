{"version":3,"sources":["hoc/withAuthRedirect.js","components/Friends/Friends.module.css","components/common/Paginator/Paginator.module.css","components/common/Paginator/Paginator.js","components/Friends/Friend/Friend.js","components/Friends/Friends.js","components/Friends/FriendsContainer.js"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Paginator","totalUsersCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","filter","p","map","className","s","selectedPage","key","e","Friend","u","user","id","friends","src","photos","small","userPhoto","alt","followed","disabled","followingInProgress","some","unfollow","follow","name","status","Friends","friend_row","users","FriendsContainer","pageNumber","getUsers","isFetching","Preloader","compose","getFriends","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","setCurrentPage","toggleFollowingProgress","requestUsers"],"mappings":"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","file":"static/js/3.8bdd07ee.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__2WPsi\",\"friend_row\":\"Friends_friend_row__2Quq0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__2xVvp\"};","import React, {useState} from \"react\";\r\nimport s from \"./Paginator.module.css\";\r\n\r\n\r\n\r\nlet Paginator = ({totalUsersCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n\r\n        let pages = []\r\n        for (let i=1; i <= pagesCount; i++) {\r\n            pages.push(i)\r\n        }\r\n\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div>\r\n            { portionNumber > 1 &&\r\n            <button onClick={ () => { setPortionNumber(portionNumber - 1)}}>Prev</button>}\r\n                {pages\r\n                    .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                    .map((p) => {\r\n                        return <span className={currentPage === p && s.selectedPage}\r\n                                 key={p}\r\n                                 onClick={(e) => {\r\n                                     onPageChanged(p)\r\n                                 }}>{p}</span>\r\n                    })}\r\n            { portionCount > portionNumber &&\r\n            <button onClick={ () => {setPortionNumber(portionNumber + 1)}}>Next</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator","import React from \"react\";\r\nimport s from \"../Friends.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\n\r\n\r\nconst Friend = (props) => {\r\n    let u = props.user\r\n    return (\r\n        <div key={u.id}>\r\n                <span>\r\n                <div className={s.friends}>\r\n                    <NavLink to={'/profile/' + u.id}>\r\n                        <img src={u.photos.small != null ? u.photos.small : userPhoto} alt=\"\"/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {u.followed\r\n                        ? <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                  onClick={() => {\r\n                                      props.unfollow(u.id)\r\n                                  }}>\r\n                            Unfollow</button>\r\n                        : <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                  onClick={() => {\r\n                                      props.follow(u.id)\r\n                                  }}>\r\n                            Follow</button>}\r\n                </div>\r\n                </span>\r\n            <span>\r\n                    <span>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"u.location.country\"}</div>\r\n                        <div>{\"u.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friend","import React from \"react\";\r\nimport s from \"./Friends.module.css\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport Friend from \"./Friend/Friend\";\r\n\r\n\r\nlet Friends = ({totalUsersCount, currentPage, onPageChanged, pageSize, ...props}) => {\r\n    return (\r\n        <div className={s.friend_row}>\r\n            <Paginator totalUsersCount={totalUsersCount} currentPage={currentPage} onPageChanged={onPageChanged} pageSize={pageSize}/>\r\n\r\n            {props.users.map(u => <Friend user={u}\r\n                                          follow={props.follow}\r\n                                          unfollow={props.unfollow}\r\n                                          key={u.id}\r\n                                          followingInProgress={props.followingInProgress}/>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friends","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow, toggleFollowingProgress, requestUsers\r\n} from \"../../redux/friends-reducer\";\r\nimport Friends from \"./Friends\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress,\r\n    getFriends,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount\r\n} from \"../../redux/friends-selectors\";\r\n\r\n\r\nclass FriendsContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            { this.props.isFetching ? <Preloader/> : null }\r\n            <Friends totalUsersCount={this.props.totalUsersCount}\r\n                     currentPage={this.props.currentPage}\r\n                     pageSize={this.props.pageSize}\r\n                     users={this.props.users}\r\n                     follow={this.props.follow}\r\n                     unfollow={this.props.unfollow}\r\n                     onPageChanged={this.onPageChanged}\r\n                     followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getFriends(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers}),\r\n    withAuthRedirect\r\n)(FriendsContainer)\r\n"],"sourceRoot":""}