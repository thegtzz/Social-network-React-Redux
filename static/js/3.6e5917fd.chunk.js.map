{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onBlur","updateStatus","autoFocus","onChange","e","currentTarget","value","Input","Element","Textarea","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","st","formSummaryError","s","span","Field","placeholder","name","component","type","Object","keys","contacts","map","key","ProfileData","isOwner","onClick","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","Preloader","descriptionBlock","src","photos","large","userPhoto","mainPhoto","alt","target","files","length","savePhoto","initialValues","formData","saveProfile","then","Post","item","message","likesCount","maxLength10","maxLengthCreator","MyPostsReduxForm","validate","requiredField","MyPosts","postsElements","posts","p","id","postsBlock","addPost","PostMessage","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","text","addPostActionCreator","Profile","ProfileContainer","refreshProfile","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","this","prevProps","prevState","snapshot","React","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.6e5917fd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1y8cD\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3Onqh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2oZko\",\"posts\":\"MyPosts_posts__1pZ9T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__tbJmq\"};","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    let activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n                <span onDoubleClick={ activateEditMode }>{props.status || 'Write your status'}</span>\r\n            </div>\r\n            }\r\n            { editMode &&\r\n            <div>\r\n                <input onBlur={ deactivateEditMode } autoFocus={ true } onChange={ onStatusChange } value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import s from \"./ProfileInfo.module.css\";\r\nimport st from \"../../common/FormsControls/FormsControls.module.css\"\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Element} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst Input = Element('input')\r\nconst Textarea = Element('textarea')\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button>Save</button></div>\r\n        {error && <div className={st.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n\r\n        <span className={s.span}>\r\n            <b>Имя:</b><Field placeholder={\"Full name\"} name={\"fullName\"} component={Input}/>\r\n        </span>\r\n        <span>\r\n            <b>Ищу работу: </b><Field name={\"lookingForAJob\"} component={Input} type={\"checkbox\"}/>\r\n        </span>\r\n        <span>\r\n            <b>Навыки: </b><Field placeholder={\"My professional skills\"} name={\"lookingForAJobDescription\"} component={Textarea}/>\r\n        </span>\r\n         <span>\r\n            <b>Обо мне:</b><Field placeholder={\"About me\"} name={\"aboutMe\"} component={Textarea}/>\r\n        </span>\r\n\r\n        <span><b>Контакты: </b> {Object.keys(profile.contacts)\r\n            .map(key => {\r\n                return <div key={key}>\r\n                    <b>{key}: <Field placeholder={key} name={\"contacts.\" + key} component={Input}/></b>\r\n                </div>\r\n            })}</span>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm","import React, {useState} from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataFormReduxForm from \"./ProfileDataForm\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const mainPhotoSelected = (e) => {\r\n        if(e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false)\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                 <img\r\n                    src={props.profile.photos.large || userPhoto} className={s.mainPhoto}\r\n                    alt=\"\"/>\r\n                    {props.isOwner && <input type={\"file\"} onChange={mainPhotoSelected}/>}\r\n                {editMode\r\n                    ? <ProfileDataFormReduxForm initialValues={props.profile}\r\n                                                profile={props.profile}\r\n                                                onSubmit={onSubmit}/>\r\n                    : <ProfileData profile={props.profile}\r\n                                   goToEditMode={() => {setEditMode(true)}}\r\n                                   isOwner={props.isOwner}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = (props) => {\r\n    return <div>\r\n        {props.isOwner && <div><button onClick={props.goToEditMode}>Edit</button></div>}\r\n\r\n        <span className={s.span}>\r\n            <b>Имя:</b> {props.profile.fullName}\r\n        </span>\r\n        <span>\r\n            <b>Ищу работу: </b>{(props.profile.lookingForAJob) ? 'да' : 'нет'}\r\n        </span>\r\n        <span>\r\n            <b>Навыки: </b>{props.profile.lookingForAJobDescription}\r\n        </span>\r\n        <span>\r\n            <b>Обо мне:</b> {props.profile.aboutMe}\r\n        </span>\r\n\r\n        <span><b>Контакты: </b> {Object.keys(props.profile.contacts)\r\n            .map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n            })}</span>\r\n    </div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src=\"https://cdn1.iconfinder.com/data/icons/diversity-avatars-volume-01-circles/64/matrix-morpheus-512.png\"\r\n                alt=\"\"/>\r\n            { props.message }\r\n            <div>\r\n                <span>{props.likesCount} Likes</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\nimport {Element} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst Textarea = Element('textarea')\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPostsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Add post\"} name={\"PostMessage\"}\r\n                       component={Textarea} validate={[requiredField, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MyPostsReduxForm = reduxForm({form: 'addPost'})(MyPostsForm)\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements = props.posts.map( p => <Post message={p.message} likesCount={p.likesCount} key={p.id}/>)\r\n\r\n    const onSubmit = (formData) => {\r\n        debugger\r\n        props.addPost(formData.PostMessage)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My Posts</h3>\r\n            <MyPostsReduxForm onSubmit={onSubmit}/>\r\n            <div className={s.posts}>\r\n                { postsElements }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (text) => {dispatch(addPostActionCreator(text))}\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo isOwner={props.isOwner} saveProfile={props.saveProfile} savePhoto={props.savePhoto} profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile = () => {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         isOwner={!this.props.match.params.userId}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                         savePhoto={this.props.savePhoto}\r\n                         saveProfile={this.props.saveProfile}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n)(ProfileContainer)"],"sourceRoot":""}