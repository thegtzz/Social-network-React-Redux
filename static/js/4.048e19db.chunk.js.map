{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DialogItem","path","id","className","s","dialog","active","src","alt","name","Message","message","Textarea","Element","maxLength50","maxLengthCreator","DialogsForm","onSubmit","handleSubmit","form","event","a","reset","placeholder","component","validate","compose","dialogsPage","dispatch","sendMessage","text","addMessageActionCreator","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","dialogItems","formData","DialogMessage"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,uICG7MC,EAA6B,SAACC,GAC9B,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIdE,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAI,eAHV,GACXC,IAAML,WAQtC,OAFqCM,YAAQX,EAARW,CAAoCL,K,oHCF9DM,EAXI,SAACJ,GAChB,IAAIK,EAAO,YAAcL,EAAMM,GAE/B,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,yBAAKC,IAAI,qLAAqLC,IAAI,KAClM,kBAAC,IAAD,CAASX,GAAII,GAAOL,EAAMa,QCEvBC,EATC,SAACd,GACb,OACI,yBAAKO,UAAWC,IAAEO,SACd,yBAAKJ,IAAI,qLAAqLC,IAAI,KACjMZ,EAAMe,U,gCCGbC,EAAWC,YAAQ,YACnBC,EAAcC,YAAiB,IAE/BC,EAAc,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAClB,OACI,kBAAC,IAAD,CAAMA,SAAUA,IACX,gBAAEC,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,KAAhB,OACG,0BAAMF,SAAQ,uCAAE,WAAOG,GAAP,SAAAC,EAAA,sEACFH,EAAaE,GADX,OAERD,EAAKG,QAFG,2CAAF,uDAIV,kBAAC,IAAD,CAAOC,YAAa,oBAAqBd,KAAM,gBAAiBe,UAAWZ,EACnEa,SAAUX,IAClB,6BACI,sD,yBCHTY,sBACX3B,aAfkB,SAACV,GACnB,MAAO,CACHsC,YAAatC,EAAMsC,gBAKF,SAACC,GACtB,MAAO,CACHC,YAAa,SAACC,GAAUF,EAASG,YAAwBD,SAO7DtC,IAFWkC,EDWQ,SAAC9B,GAEpB,IAAIP,EAAQO,EAAM+B,YAEdK,EAAkB3C,EAAM4C,QAAQC,KAAK,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAY1B,KAAM0B,EAAE1B,KAAM2B,IAAKD,EAAEjC,GAAIA,GAAIiC,EAAEjC,QACrFmC,EAAmBhD,EAAMiD,SAASJ,KAAK,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAAS5B,QAAS4B,EAAE5B,QAASyB,IAAKG,EAAErC,QAOpF,OAAIN,EAAMN,OAGN,yBAAKa,UAAWC,IAAE6B,SACd,yBAAK9B,UAAWC,IAAEoC,aACZR,GAEN,yBAAK7B,UAAWC,IAAEkC,UACZD,EACF,kBAAC,EAAD,CAAapB,SAbR,SAACwB,GACd7C,EAAMiC,YAAYY,EAASC,oBAGN,kBAAC,IAAD,CAAU7C,GAAI","file":"static/js/4.048e19db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1pDwE\",\"dialogItems\":\"Dialogs_dialogItems__18FfV\",\"dialog\":\"Dialogs_dialog__3dmp9\",\"active\":\"Dialogs_active__1GlqH\",\"messages\":\"Dialogs_messages__3hvEc\",\"message\":\"Dialogs_message__ENBoP\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"../Dialogs.module.css\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <img src=\"https://f0.pngfuel.com/png/592/884/black-and-white-cartoon-character-programmer-computer-programming-computer-software-computer-icons-programming-language-avatar-png-clip-art.png\" alt=\"\"/>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from \"react\";\r\nimport s from \"../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            <img src=\"https://f0.pngfuel.com/png/592/884/black-and-white-cartoon-character-programmer-computer-programming-computer-software-computer-icons-programming-language-avatar-png-clip-art.png\" alt=\"\"/>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, Form} from \"react-final-form\";\r\nimport {Element} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator} from \"../../utils/validators/validators\";\r\n\r\n\r\nconst Textarea = Element('textarea')\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst DialogsForm = ({onSubmit}) => {\r\n    return (\r\n        <Form onSubmit={onSubmit}>\r\n            {({handleSubmit, form}) => (\r\n                <form onSubmit={async (event) => {\r\n                        await handleSubmit(event)\r\n                        form.reset()\r\n                }}>\r\n                    <Field placeholder={\"Type your message\"} name={\"DialogMessage\"} component={Textarea}\r\n                            validate={maxLength50}/>\r\n                    <div>\r\n                        <button>Send message</button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport const Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id}/> )\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id} /> )\r\n\r\n\r\n    const onSubmit = (formData) => {\r\n        props.sendMessage(formData.DialogMessage)\r\n    }\r\n\r\n    if(!props.isAuth) return <Redirect to={\"/login\"}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                { messagesElements }\r\n                <DialogsForm onSubmit={onSubmit}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (text) => {dispatch(addMessageActionCreator(text))}\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}