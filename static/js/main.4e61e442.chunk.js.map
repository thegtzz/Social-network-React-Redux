{"version":3,"sources":["components/Profile/Profile.module.css","components/Header/Header.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/upload_profile_photo.png","components/common/Preloader/Preloader.js","serviceWorker.js","components/Navbar/Navbar.js","components/News/News.js","components/Music/Music.js","components/Settings/Settings.js","components/Header/LoginElement/LoginElement.js","components/Header/CustomHeaderHooks/useOutsideClick.js","components/Header/Header.js","redux/auth-reducer.js","components/Header/HeaderContainer.js","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileInfo.js","redux/profile-reducer.js","components/Profile/MyPosts/Post/Post.js","components/Friends/ProfileFriendsBlock/ProfileFriendsBlock.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","components/Login/Login.js","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","App.js","index.js","components/common/FormsControls/FormsControls.js","components/Friends/ProfileFriendsBlock/FriendsBlock.module.css","utils/validators/validators.js","components/Profile/MyPosts/MyPosts.module.css","components/common/FormsControls/FormsControls.module.css","utils/object-helpers.js","redux/friends-reducer.js","redux/friends-selectors.js","components/Navbar/Navbar.module.css","redux/dialogs-reducer.js","api/api.js","assets/images/logo.jpg","assets/images/preloader.svg"],"names":["module","exports","Preloader","props","style","src","preloader","alt","Boolean","window","location","hostname","match","Navbar","className","s","nav","to","navlinkgrid","leftIcon","leftLabel","separateDiv","News","Music","Settings","LoginElement","initialValue","ref","useRef","useState","showMenu","setShowMenu","handleClickOutside","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","useOutsideClick","profile","loginBlock","onClick","userName","login","photos","small","userImage","loginBlockArrow","topDroppedMenu","topDivSep","logOut","Header","header","logoImage","isAuth","initialState","userId","email","captchaUrl","setAuthUserData","type","payload","getCaptchaUrlSuccess","getAuthUserData","dispatch","a","authAPI","authMe","data","resultCode","id","getCaptchaUrl","securityAPI","response","url","authReducer","state","action","HeaderContainer","this","React","Component","connect","auth","profilePage","authorizedUserId","loginOut","ProfileStatusWithHooks","editMode","setEditMode","status","setStatus","onBlur","updateStatus","autoFocus","onChange","e","currentTarget","value","Input","Element","Textarea","ProfileDataForm","error","onSubmit","initialValues","handleSubmit","pm","mainInfo","st","formSummaryError","pageTop","htmlFor","btnProfileEdit","hidden","name","placeholder","component","profileInfo","cn","profileInfoAbout","profileInfoLeft","class","textarea","profileContacts","contactSep","Object","keys","contacts","map","key","ProfileInfo","mainPhoto","profilePhoto","large","userPhoto","mainPhotoBlock","labelEditMainPhoto","uploadPhoto","isOwner","files","length","savePhoto","formData","saveProfile","then","goToEditMode","ProfileData","fullName","profileStatus","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","posts","message","likesCount","newPostText","getUserProfile","profileAPI","profileReducer","PostText","filter","p","postId","Post","wallPostInfo","wallPostHeaderWrap","wallPostImage","wallPostHeaderInfo","wallPostHeaderDate","wallPostContent","wallPostLikeWrap","wallPostLikes","wallPostViews","ProfileFriendsBlock","totalUsersCount","users","friends","friendsBlock","noTextDecoration","friendsCount","totalUsers","u","friendCell","friendPhoto","slice","maxLength280","maxLengthCreator","MyPostsForm","form","reset","sendPost","postsBlock","postField","validate","submitPost","addPostButtonWrap","addWallPostButton","MyPostsContainer","getTotalUsersCount","getFriends","addPost","text","addPostActionCreator","getUsers","requestUsers","postsElements","PostMessage","wallPosts","Profile","mainContent","ProfileContainer","refreshProfile","params","history","push","getStatus","prevProps","prevState","snapshot","compose","file","getState","stopSubmit","_error","messages","Promise","reject","withRouter","LoginForm","requiredField","password","rememberMe","captcha","initialized","appReducer","sidebarReducer","reducers","combineReducers","dialogsPage","dialogsReducer","sidebar","friendsPage","friendsReducer","formReducer","app","store","createStore","applyMiddleware","thunkMiddleWare","DialogsContainer","lazy","FriendsContainer","AppContainer","initializeApp","from","path","render","Suspense","fallback","MainApp","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","input","meta","hasError","touched","formControl","maxLength","updateObjectInArray","items","itemId","objPropName","newObjProps","pageSize","currentPage","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","userAPI","count","totalCount","followUnfollowFlow","apiMethod","actionCreator","follow","followUser","bind","unfollow","unfollowUser","followed","createSelector","getPageSize","getCurrentPage","getIsFetching","getFollowingInProgress","newMessageText","dialogs","addMessageActionCreator","messageText","instance","axios","withCredentials","baseURL","headers","get","delete","post","put","photoFile","FormData","append"],"mappings":"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","file":"static/js/main.4e61e442.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContent\":\"Profile_mainContent__2bqvq\",\"mainPhoto\":\"Profile_mainPhoto__2zkjk\",\"mainInfo\":\"Profile_mainInfo__1n8j5\",\"friends\":\"Profile_friends__33fts\",\"sendPost\":\"Profile_sendPost__1lDO0\",\"wallPosts\":\"Profile_wallPosts__3Vx-y\",\"btnProfileEdit\":\"Profile_btnProfileEdit__1h3Lc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3o1mu\",\"loginBlock\":\"Header_loginBlock__1eBmJ\",\"active\":\"Header_active__1c_O3\",\"userName\":\"Header_userName__1GZJL\",\"loginBlockArrow\":\"Header_loginBlockArrow__3teyr\",\"topDroppedMenu\":\"Header_topDroppedMenu__37DrU\",\"topDroppedMenuLogoutDiv\":\"Header_topDroppedMenuLogoutDiv__4yh1J\",\"topDivSep\":\"Header_topDivSep__1BOlk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wallPostInfo\":\"Post_wallPostInfo__2wBg2\",\"wallPostHeaderWrap\":\"Post_wallPostHeaderWrap__3RyWA\",\"wallPostImage\":\"Post_wallPostImage__paFVo\",\"wallPostHeaderInfo\":\"Post_wallPostHeaderInfo__1PR_S\",\"wallPostHeaderDate\":\"Post_wallPostHeaderDate__3LHBc\",\"wallPostContent\":\"Post_wallPostContent__1LZ5c\",\"wallPostLikeWrap\":\"Post_wallPostLikeWrap__1wZFR\",\"wallPostLikes\":\"Post_wallPostLikes__3cxbI\",\"wallPostViews\":\"Post_wallPostViews__3HHNY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPhotoBlock\":\"ProfileInfo_mainPhotoBlock__1R2-L\",\"profilePhoto\":\"ProfileInfo_profilePhoto__3_a_G\",\"hidden\":\"ProfileInfo_hidden__2Wyhg\",\"uploadPhoto\":\"ProfileInfo_uploadPhoto__2ICFO\",\"labelEditMainPhoto\":\"ProfileInfo_labelEditMainPhoto__17gz9\",\"pageTop\":\"ProfileInfo_pageTop__39G5H\",\"name\":\"ProfileInfo_name__29nHe\",\"profileStatus\":\"ProfileInfo_profileStatus__1kFJb\",\"profileInfo\":\"ProfileInfo_profileInfo__1hwIQ\",\"profileInfoAbout\":\"ProfileInfo_profileInfoAbout__1AW_z\",\"profileInfoLeft\":\"ProfileInfo_profileInfoLeft__3QwOD\",\"profileContacts\":\"ProfileInfo_profileContacts__1-ADW\",\"contactSep\":\"ProfileInfo_contactSep__271Hu\",\"textarea\":\"ProfileInfo_textarea__1HAtF\"};","module.exports = __webpack_public_path__ + \"static/media/upload_profile_photo.668f92e9.png\";","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nexport const Preloader = (props) => {\r\n    return <div style={{  }}>\r\n        <img src={ preloader } alt=\"\"/>\r\n    </div>\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport s from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport ProfileIcon from '@vkontakte/icons/dist/24/home';\r\nimport NewsIcon from '@vkontakte/icons/dist/24/newsfeed';\r\nimport MessagesIcon from '@vkontakte/icons/dist/24/chats';\r\nimport UserIcon from '@vkontakte/icons/dist/24/user';\r\nimport MusicIcon from '@vkontakte/icons/dist/24/music';\r\nimport SettingsIcon from '@vkontakte/icons/dist/24/settings';\r\n\r\n\r\nconst Navbar = (props) => {\r\n    return <nav className={s.nav}>\r\n            <NavLink to='/profile' className={s.navlinkgrid}>\r\n                <ProfileIcon className={s.leftIcon}/>\r\n                <span className={s.leftLabel}>My profile</span>\r\n            </NavLink>\r\n            <NavLink to='/news' className={s.navlinkgrid}>\r\n                <NewsIcon className={s.leftIcon}/>\r\n                <span className={s.leftLabel}>News</span>\r\n            </NavLink>\r\n            <NavLink to='/dialogs' className={s.navlinkgrid}>\r\n                <MessagesIcon className={s.leftIcon}/>\r\n                <span className={s.leftLabel}>Messages</span>\r\n            </NavLink>\r\n            <NavLink to='/friends' className={s.navlinkgrid}>\r\n                <UserIcon className={s.leftIcon}/>\r\n                <span className={s.leftLabel}>Friends</span>\r\n            </NavLink>\r\n            <NavLink to='/music' className={s.navlinkgrid}>\r\n                <MusicIcon className={s.leftIcon}/>\r\n                <span className={s.leftLabel}>Music</span>\r\n            </NavLink>\r\n            <div className={s.separateDiv}></div>\r\n            <NavLink to='/settings' className={s.navlinkgrid}>\r\n                <SettingsIcon className={s.leftIcon}/>\r\n                <span className={s.leftLabel}>Settings</span>\r\n            </NavLink>\r\n    </nav>\r\n}\r\n\r\nexport default Navbar\r\n","import React from \"react\";\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News","import React from \"react\";\r\n\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music","import React from \"react\";\r\n\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Settings","import React from \"react\";\r\nimport s from \"../Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userImage from '../../../assets/images/upload_profile_photo.png'\r\nimport {useOutsideClick} from \"../CustomHeaderHooks/useOutsideClick\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\n\r\n\r\nexport const LoginElement = (props) => {\r\n    const {showMenu, setShowMenu, ref} = useOutsideClick(false)\r\n\r\n    const handleClick = () => {\r\n        setShowMenu(!showMenu)\r\n    }\r\n\r\n    if (!props.profile.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div ref={ref} className={s.loginBlock} onClick={handleClick}>\r\n            <a>\r\n                <div className={s.userName}>{props.login}</div>\r\n                <img src={props.profile.profile.photos.small || userImage} alt=''/>\r\n                <div className={s.loginBlockArrow}></div>\r\n            </a>\r\n            {showMenu\r\n                && <div className={s.topDroppedMenu}>\r\n                    <NavLink to={'/profile'}>My profile</NavLink>\r\n                    <div className={s.topDivSep}></div>\r\n                    <NavLink to={'/settings'}>Settings</NavLink>\r\n                    <NavLink to={'/help'}>Help</NavLink>\r\n                    <div className={s.topDivSep}></div>\r\n                    <div onClick={props.logOut}>\r\n                        <NavLink to={'/login'}>Log out</NavLink>\r\n                    </div>\r\n                  </div>}\r\n        </div>\r\n    )\r\n}","import {useRef, useState, useEffect} from \"react\";\r\n\r\n\r\nexport const useOutsideClick = (initialValue) => {\r\n    const ref = useRef(null)\r\n    const [showMenu, setShowMenu] = useState(initialValue)\r\n\r\n    const handleClickOutside = (event) => {\r\n        if (ref.current && !ref.current.contains(event.target)) setShowMenu(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('click', handleClickOutside, true)\r\n        return () => {\r\n            document.removeEventListener('click', handleClickOutside, true)\r\n        }\r\n    }, [ref])\r\n\r\n    return {showMenu, setShowMenu, ref}\r\n}","import React from \"react\";\r\nimport s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport logoImage from '../../assets/images/logo.jpg'\r\nimport {LoginElement} from \"./LoginElement/LoginElement\";\r\n\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <NavLink to={'/news'}>\r\n            <img src={logoImage} alt=\"\"/>\r\n            <span>#stayhome</span>\r\n        </NavLink>\r\n\r\n        {props.isAuth\r\n            ? <LoginElement {...props}/>\r\n            : <div className={s.loginBlock}><NavLink to={'/login'}>Login</NavLink></div>\r\n        }\r\n\r\n    </header>\r\n}\r\n\r\nexport default Header","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS'\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null // if null then captcha is not required\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}})\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}})\r\n\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let data = await authAPI.authMe()\r\n    if (data.resultCode === 0) {\r\n        let {id, email, login} = data.data\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let data = await authAPI.login(email, password, rememberMe, captcha)\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        let message = data.messages.length > 0 ? data.messages[0] : \"Some error\"\r\n        dispatch(stopSubmit(\"login\", {_error: message}))\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = response.data.url\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\nexport const logOut = () => async (dispatch) => {\r\n    let data = await authAPI.loginOut()\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReducer","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logOut} from \"../../redux/auth-reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} profile={this.props.profile}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    profile: state.profilePage,\r\n    authorizedUserId: state.auth.userId,\r\n})\r\n\r\nexport default connect(mapStateToProps, {logOut})(HeaderContainer)","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\nexport const ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    let activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div onClick={ activateEditMode }>\r\n                <span>{props.status || 'Write your status'}</span>\r\n            </div>\r\n            }\r\n            { editMode &&\r\n            <div>\r\n                <input onBlur={ deactivateEditMode } autoFocus={ true } onChange={ onStatusChange } value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import s from \"./ProfileInfo.module.css\";\r\nimport st from \"../../common/FormsControls/FormsControls.module.css\"\r\nimport pm from \"../Profile.module.css\"\r\nimport React from \"react\";\r\nimport {Form, Field} from \"react-final-form\";\r\nimport {Element} from \"../../common/FormsControls/FormsControls\";\r\nimport cn from \"classnames\";\r\n\r\n\r\nconst Input = Element('input')\r\nconst Textarea = Element('textarea')\r\n\r\nexport const ProfileDataForm = ({profile, error, onSubmit}) => {\r\n    return (\r\n        <Form initialValues={profile} onSubmit={onSubmit}>\r\n            {({handleSubmit}) => (\r\n                <form onSubmit={handleSubmit} className={pm.mainInfo}>\r\n                    {error && <div className={st.formSummaryError}>\r\n                        {error}\r\n                    </div>}\r\n\r\n                    <div className={s.pageTop}>\r\n                        <label htmlFor='editProfileInfo' className={pm.btnProfileEdit}>Save\r\n                            <button id='editProfileInfo' className={s.hidden}></button>\r\n                        </label>\r\n                        <h1 className={s.name}><Field placeholder={\"Full name\"} name={\"fullName\"} component={Input}/></h1>\r\n                    </div>\r\n                    <div className={s.profileInfo}>\r\n                        <div>\r\n                            <div className={cn(s.profileInfoAbout, s.profileInfoLeft)}>Looking for a job:</div>\r\n                            <div className={cn(s.profileInfoAbout)}><Field name={\"lookingForAJob\"} component={Input} type={\"checkbox\"}/></div>\r\n                        </div>\r\n                        <div>\r\n                            <div className={cn(s.profileInfoAbout, s.profileInfoLeft)}>Skills:</div>\r\n                            <div className={cn(s.profileInfoAbout)}><Field class={s.textarea} placeholder={\"My professional skills\"} name={\"lookingForAJobDescription\"}\r\n                                          component={Textarea}/></div>\r\n                        </div>\r\n                        <div>\r\n                            <div className={cn(s.profileInfoAbout, s.profileInfoLeft)}>About me:</div>\r\n                            <div className={cn(s.profileInfoAbout)}><Field class={s.textarea} placeholder={\"About me\"} name={\"aboutMe\"} component={Textarea}/></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={s.profileContacts}>\r\n                        <div className={s.contactSep}>Contacts</div>\r\n                        {Object.keys(profile.contacts)\r\n                            .map(key => {\r\n                                return <div key={key}>\r\n                                        <div className={cn(s.profileInfoAbout, s.profileInfoLeft)}>{key}:</div>\r\n                                        <div className={s.profileInfoAbout}><Field placeholder={key} name={\"contacts.\" + key} component={Input}/></div>\r\n                                </div>\r\n                            })}\r\n                    </div>\r\n                </form>\r\n            )}\r\n        </Form>\r\n    )\r\n}\r\n","import React, {useState} from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\nimport pm from '../Profile.module.css'\r\nimport userPhoto from \"../../../assets/images/upload_profile_photo.png\";\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatus/ProfileStatusWithHooks\";\r\nimport {ProfileDataForm} from \"./ProfileDataForm\";\r\nimport cn from \"classnames\"\r\n\r\n\r\nexport const ProfileInfo = (props) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    const mainPhotoSelected = (e) => {\r\n        if(e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false)\r\n            }\r\n        )\r\n    }\r\n\r\n    return <>\r\n\r\n            <div className={cn(pm.mainPhoto, s.profilePhoto)}>\r\n                <img\r\n                    src={props.profile.photos.large || userPhoto} className={s.mainPhotoBlock}\r\n                    alt=\"\"/>\r\n                <label htmlFor='profilePhoto' className={s.labelEditMainPhoto}>\r\n                    <div className={s.uploadPhoto}>\r\n                        {props.isOwner &&\r\n                        <input type={\"file\"} id='profilePhoto' className={s.hidden} onChange={mainPhotoSelected}/>}\r\n                        Edit photo\r\n                    </div>\r\n                </label>\r\n            </div>\r\n\r\n            {editMode\r\n                ? <ProfileDataForm initialValues={props.profile}\r\n                                            profile={props.profile}\r\n                                            onSubmit={onSubmit}/>\r\n                : <ProfileData profile={props.profile}\r\n                               goToEditMode={() => {\r\n                                   setEditMode(true)\r\n                               }}\r\n                               isOwner={props.isOwner}\r\n                               status={props.status}\r\n                               updateStatus={props.updateStatus}/>}\r\n\r\n    </>\r\n}\r\n\r\nconst ProfileData = (props) => {\r\n    return (\r\n        <div className={pm.mainInfo}>\r\n            <div className={s.pageTop}>\r\n                {props.isOwner && <label htmlFor='editProfileInfo' className={pm.btnProfileEdit}>Edit<button id='editProfileInfo' className={s.hidden} onClick={props.goToEditMode}></button></label>}\r\n                <h1 className={s.name}>{props.profile.fullName}</h1>\r\n                <div className={s.profileStatus}>\r\n                    <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                </div>\r\n            </div>\r\n            <div className={s.profileInfo}>\r\n                <div>\r\n                    <div className={cn(s.profileInfoAbout, s.profileInfoLeft)}>Looking for a job:</div>\r\n                    <div className={cn(s.profileInfoAbout)}>{(props.profile.lookingForAJob) ? 'yes' : 'no'}</div>\r\n                </div>\r\n                <div>\r\n                    <div className={cn(s.profileInfoAbout, s.profileInfoLeft)}>Skills:</div>\r\n                    <div className={cn(s.profileInfoAbout)}>{props.profile.lookingForAJobDescription}</div>\r\n                </div>\r\n                <div>\r\n                    <div className={cn(s.profileInfoAbout, s.profileInfoLeft)}>About me:</div>\r\n                    <div className={cn(s.profileInfoAbout)}>{props.profile.aboutMe}</div>\r\n                </div>\r\n            </div>\r\n            <div className={s.profileContacts}>\r\n                <div className={s.contactSep}>Contacts</div>\r\n                {Object.keys(props.profile.contacts)\r\n                    .map(key => {\r\n                        return props.profile.contacts[key] &&\r\n                            <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n                    })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div>\r\n            <div className={cn(s.profileInfoAbout, s.profileInfoLeft)}>{contactTitle}:</div>\r\n            <div className={s.profileInfoAbout}>{contactValue}</div>\r\n        </div>\r\n    )\r\n}","import {profileAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST'\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_STATUS = 'SET_STATUS'\r\nconst DELETE_POST = 'DELETE_POST'\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\r\n\r\n\r\nlet initialState = {\r\n            posts: [\r\n                {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n                {id: 2, message: 'It\\'s my first post.', likesCount: 11},\r\n                {id: 3, message: 'It\\'s my second post.', likesCount: 11},\r\n                {id: 4, message: 'Go on rolling.', likesCount: 11},\r\n            ],\r\n            newPostText: '',\r\n            profile: null,\r\n            status: ''\r\n        }\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n           return  {\r\n                ...state,\r\n                posts: [...state.posts, {id: 5, message: action.PostText, likesCount: 0}],\r\n                newPostText: ''\r\n            }\r\n        }\r\n\r\n        case SET_STATUS:\r\n            return {...state, status: action.status}\r\n\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile}\r\n\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {...state, profile: {...state.profile, photos: action.photos}}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (text) => {\r\n    return {\r\n        type: ADD_POST,\r\n        PostText: text\r\n    }\r\n}\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status})\r\nexport const savePhotoSuccess = (photos) => ({ type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let data = await profileAPI.getUserProfile(userId)\r\n    dispatch(setUserProfile(data))\r\n\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos))\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    let response = await profileAPI.saveProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId))\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0] }))\r\n        return Promise.reject(response.data.messages[0])\r\n    }\r\n}\r\n\r\nexport default profileReducer","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={s.wallPostInfo}>\r\n            <div className={s.wallPostHeaderWrap}>\r\n                <img className={s.wallPostImage} src={props.profile.photos.large} alt=\"\"/>\r\n                <div className={s.wallPostHeaderInfo}>{props.profile.fullName}</div>\r\n                <div className={s.wallPostHeaderDate}>1 May 2020</div>\r\n            </div>\r\n            <div className={s.wallPostContent}>\r\n                { props.message }\r\n            </div>\r\n            <div className={s.wallPostLikeWrap}>\r\n                <div className={s.wallPostLikes}>42</div>\r\n                <div className={s.wallPostViews}>42</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport s from './FriendsBlock.module.css'\r\nimport pm from '../../Profile/Profile.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto from \"../../../assets/images/upload_profile_photo.png\";\r\nimport cn from 'classnames'\r\n\r\n\r\nexport const ProfileFriendsBlock = ({totalUsersCount, users}) => {\r\n    return (\r\n        <div className={cn(pm.friends, s.friendsBlock)}>\r\n            <NavLink to={'/friends'} className={cn(s.noTextDecoration, s.friendsCount)}>\r\n                Friends <span className={s.totalUsers}>{totalUsersCount}</span>\r\n            </NavLink>\r\n            {users.map(u => <div className={s.friendCell} key={u.id}>\r\n                <NavLink to={'/profile/' + u.id}>\r\n                    <img className={s.friendPhoto} src={u.photos.small != null ? u.photos.small : userPhoto} alt=\"\"/>\r\n                </NavLink>\r\n                <div>{u.name.slice(0, 10)}</div>\r\n            </div>).slice(-6)}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport pm from '../Profile.module.css'\r\nimport cn from 'classnames'\r\nimport Post from \"./Post/Post\";\r\nimport {Form, Field} from \"react-final-form\";\r\nimport {maxLengthCreator} from \"../../../utils/validators/validators\";\r\nimport {Element} from \"../../common/FormsControls/FormsControls\";\r\nimport userImage from \"../../../assets/images/upload_profile_photo.png\";\r\nimport {ProfileFriendsBlock} from \"../../Friends/ProfileFriendsBlock/ProfileFriendsBlock\";\r\n\r\n\r\nconst Textarea = Element('textarea')\r\nconst maxLength280 = maxLengthCreator(280)\r\n\r\nconst MyPostsForm = ({profile, onSubmit}) => {\r\n    return (\r\n        <Form onSubmit={onSubmit}>\r\n            {({handleSubmit, form}) => (\r\n                <form onSubmit={async event => {\r\n                    await handleSubmit(event)\r\n                    form.reset()}\r\n                } className={cn(pm.sendPost, s.postsBlock)}>\r\n                    <div className={s.postField}>\r\n                        <a>\r\n                            <img src={profile.photos.small || userImage} alt=''/>\r\n                        </a>\r\n                        <Field placeholder={\"Write something...\"} name={\"PostMessage\"}\r\n                               component={Textarea} validate={maxLength280}/>\r\n                    </div>\r\n                    <div className={s.submitPost}>\r\n                        <div className={s.addPostButtonWrap}>\r\n                            <button className={s.addWallPostButton}>Post</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport const MyPosts = (props) => {\r\n\r\n    let postsElements = props.posts.map( p => <Post message={p.message}\r\n                                                    profile={props.profile}\r\n                                                    key={p.id}/>)\r\n    const onSubmit = formData => {\r\n        props.addPost(formData.PostMessage)\r\n    }\r\n\r\n    return <>\r\n        <ProfileFriendsBlock totalUsersCount={props.totalUsersCount} users={props.users}/>\r\n        <MyPostsForm profile={props.profile} onSubmit={onSubmit}/>\r\n        <div className={pm.wallPosts}>\r\n            { postsElements }\r\n        </div>\r\n    </>\r\n}","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {getFriends, getTotalUsersCount} from \"../../../redux/friends-selectors\";\r\nimport {requestUsers} from \"../../../redux/friends-reducer\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        profile: state.profilePage.profile,\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        users: getFriends(state)\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (text) => {dispatch(addPostActionCreator(text))},\r\n        getUsers: requestUsers\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","import React from \"react\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport s from './Profile.module.css'\r\n\r\n\r\nexport const Profile = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.mainContent}>\r\n            <ProfileInfo isOwner={props.isOwner} saveProfile={props.saveProfile} savePhoto={props.savePhoto} profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer profile={props.profile}/>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Profile} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile = () => {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         isOwner={!this.props.match.params.userId}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                         savePhoto={this.props.savePhoto}\r\n                         saveProfile={this.props.saveProfile}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n)(ProfileContainer)","import React from \"react\";\r\nimport {Field, Form} from \"react-final-form\";\r\nimport {Element} from \"../common/FormsControls/FormsControls\";\r\nimport {requiredField} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst Input = Element('input')\r\n\r\nconst LoginForm = ({onSubmit, captchaUrl}) => {\r\n    return (\r\n        <Form onSubmit={onSubmit}>\r\n            {({handleSubmit}) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <Field placeholder={\"Email\"} name={\"email\"} component={Input} validate={requiredField}/>\r\n                    </div>\r\n                    <div>\r\n                        <Field placeholder={\"Password\"} name={\"password\"} type={\"password\"} component={Input} validate={requiredField}/>\r\n                    </div>\r\n                    <div>\r\n                        <Field component={Input} name={\"rememberMe\"} type={\"checkbox\"}/> remember me\r\n                    </div>\r\n\r\n                    {captchaUrl && <img src={captchaUrl} alt=\"\"/>}\r\n                    {captchaUrl && <Field placeholder={\"Symbols from image\"}\r\n                                          name={\"captcha\"}\r\n                                          validate={requiredField}\r\n                                          component={Input}/>}\r\n\r\n                    <div>\r\n                        <button>Login</button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n    if(props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        captchaUrl: state.auth.captchaUrl\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(Login)","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    promise.then(() => {\r\n        dispatch(initializedSuccess())\r\n    })\r\n}\r\n\r\n\r\nexport default appReducer","let initialState = {\r\n            friends: [\r\n                {id: 1, name: 'Yan'},\r\n                {id: 2, name: 'Lera'},\r\n                {id: 3, name: 'Alina'},\r\n                {id: 4, name: 'Dimon'},\r\n                {id: 5, name: 'Vlad'},\r\n            ]\r\n        }\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport friendsReducer from \"./friends-reducer\";\r\nimport authReducer from './auth-reducer'\r\nimport thunkMiddleWare from 'redux-thunk'\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    friendsPage: friendsReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleWare))\r\n\r\nwindow.store = store\r\n\r\nexport default store","import React, {useEffect} from 'react';\r\nimport {BrowserRouter, Redirect, Route} from \"react-router-dom\";\r\nimport './App.css';\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport {Preloader} from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\n\r\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\r\nconst FriendsContainer = React.lazy(() => import(\"./components/Friends/FriendsContainer\"))\r\n\r\nconst App = props => {\r\n    useEffect(() => {\r\n        props.initializeApp()\r\n    })\r\n\r\n    if(!props.initialized) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className='app-wrapper'>\r\n            <HeaderContainer/>\r\n            <Navbar/>\r\n            <div className='app-wrapper-content'>\r\n                <Redirect from={\"/\"} to={\"/profile\"}/>\r\n                <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\r\n                <React.Suspense fallback={<Preloader/>}>\r\n                    <Route path='/dialogs' render={() => <DialogsContainer/>}/>\r\n                </React.Suspense>\r\n                <React.Suspense fallback={<Preloader/>}>\r\n                    <Route path='/friends' render={() => <FriendsContainer/>}/>\r\n                </React.Suspense>\r\n                <Route path='/login' render={() => <Login/>}/>\r\n                <Route path='/news' component={News}/>\r\n                <Route path='/music' component={Music}/>\r\n                <Route path='/settings' component={Settings}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nconst AppContainer = connect(mapStateToProps, {initializeApp})(App);\r\n\r\n\r\nexport const MainApp = (props) => {\r\n    return <BrowserRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </BrowserRouter>\r\n}","import * as serviceWorker from './serviceWorker';\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {MainApp} from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n    <MainApp/>, document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport s from \"./FormsControls.module.css\"\r\n\r\n\r\nexport const Element = Element => ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n            <div>\r\n                <Element {...input} {...props} />\r\n            </div>\r\n            { hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsBlock\":\"FriendsBlock_friendsBlock__2xMVu\",\"friendsCount\":\"FriendsBlock_friendsCount__3Pr2O\",\"friendCell\":\"FriendsBlock_friendCell__17W9P\",\"totalUsers\":\"FriendsBlock_totalUsers__10YrC\",\"noTextDecoration\":\"FriendsBlock_noTextDecoration__3Vlo8\",\"friendPhoto\":\"FriendsBlock_friendPhoto__2JfaX\"};","export const requiredField = value => {\r\n    if(value) return undefined\r\n    return 'Field is required.'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value && value.length > maxLength) return `Max length is ${maxLength} symbols.`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"MyPosts_main__3wSUj\",\"postsBlock\":\"MyPosts_postsBlock__2oZko\",\"postField\":\"MyPosts_postField__QG53N\",\"submitPost\":\"MyPosts_submitPost__302xM\",\"addPostButtonWrap\":\"MyPosts_addPostButtonWrap__1oHyc\",\"addWallPostButton\":\"MyPosts_addWallPostButton__3xD06\",\"posts\":\"MyPosts_posts__1pZ9T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__RKOjQ\",\"error\":\"FormsControls_error__2qL2d\",\"formSummaryError\":\"FormsControls_formSummaryError__2JnjO\"};","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n}","import {userAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\n\r\nlet initialState = {\r\n            users: [],\r\n            pageSize: 10,\r\n            totalUsersCount: 0,\r\n            currentPage: 1,\r\n            isFetching: true,\r\n            followingInProgress: []\r\n        }\r\n\r\nconst friendsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: action.users}\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.count}\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) =>({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) =>({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) =>({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) =>({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\r\n\r\nexport const requestUsers = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(setCurrentPage(currentPage))\r\n    dispatch(toggleIsFetching(true))\r\n\r\n    let data = await userAPI.getUsers(currentPage, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(data.items))\r\n    dispatch(setTotalUsersCount(data.totalCount))\r\n\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    let data = await apiMethod(userId)\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    await followUnfollowFlow(dispatch, userId, userAPI.followUser.bind(userAPI), followSuccess)\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    await followUnfollowFlow(dispatch, userId, userAPI.unfollowUser.bind(userAPI), unfollowSuccess)\r\n}\r\n\r\n\r\nexport default friendsReducer","import {createSelector} from \"reselect\"\r\n\r\nconst getFriendsSelector = (state) => {\r\n    return state.friendsPage.users\r\n}\r\n\r\nexport const getFriends = createSelector(getFriendsSelector, (users) => {\r\n    return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.friendsPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.friendsPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.friendsPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.friendsPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.friendsPage.followingInProgress\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2749d\",\"navlinkgrid\":\"Navbar_navlinkgrid__1LxCD\",\"leftIcon\":\"Navbar_leftIcon__2Pr6r\",\"leftLabel\":\"Navbar_leftLabel__1_LE3\",\"separateDiv\":\"Navbar_separateDiv__1HDHL\"};","const ADD_MESSAGE = 'ADD-MESSAGE'\r\n\r\nlet initialState = {\r\n            messages: [\r\n                {id: 1, message: 'HI'},\r\n                {id: 2, message: 'How s your react?'},\r\n                {id: 3, message: 'Whats up?'},\r\n                {id: 4, message: 'Its ok'},\r\n                {id: 5, message: 'Go code in react?'},\r\n            ],\r\n            newMessageText: '',\r\n            dialogs: [\r\n                {id: 1, name: 'Yan'},\r\n                {id: 2, name: 'Lera'},\r\n                {id: 3, name: 'Alina'},\r\n                {id: 4, name: 'Dimon'},\r\n                {id: 5, name: 'Vlad'},\r\n            ]\r\n        }\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            return {\r\n                ...state,\r\n                newMessageText: '',\r\n                messages: [...state.messages, {id: 5, message: action.messageText}]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const addMessageActionCreator = (text) => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        messageText: text\r\n    }\r\n}\r\n\r\n\r\nexport default dialogsReducer","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": '026e3091-bf2e-480b-a762-84e0bb53c807'\r\n    }\r\n})\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    unfollowUser(id) {\r\n        return instance.delete(`follow/${id}`).then(response => response.data)\r\n    },\r\n\r\n    followUser(id) {\r\n        return instance.post(`follow/${id}`).then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => response.data)\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n            .then(response => response.data)\r\n    },\r\n    loginOut() {\r\n        return instance.delete(`auth/login`)\r\n            .then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status })\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData()\r\n        formData.append('image', photoFile)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/formData'\r\n            }\r\n        })\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile)\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n}","module.exports = __webpack_public_path__ + \"static/media/logo.e67d77d1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/preloader.4d5c5835.svg\";"],"sourceRoot":""}