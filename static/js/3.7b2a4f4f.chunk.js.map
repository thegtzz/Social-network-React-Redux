{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onBlur","updateStatus","autoFocus","onChange","e","currentTarget","value","ProfileInfo","profile","src","alt","className","s","descriptionBlock","photos","large","span","fullName","aboutMe","contacts","vk","lookingForAJob","Preloader","Post","item","message","likesCount","Textarea","Element","maxLength10","maxLengthCreator","MyPostsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","validate","requiredField","MyPosts","postsElements","posts","map","p","key","id","postsBlock","formData","addPost","PostMessage","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","text","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.7b2a4f4f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1y8cD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2oZko\",\"posts\":\"MyPosts_posts__1pZ9T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__tbJmq\"};","import React from \"react\";\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange =(e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={ this.activateEditMode }>{this.props.status || 'Write your status'}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange}\r\n                               autoFocus={true}\r\n                               onBlur={this.deactivateEditMode}\r\n                               value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    let activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n                <span onDoubleClick={ activateEditMode }>{props.status || 'Write your status'}</span>\r\n            </div>\r\n            }\r\n            { editMode &&\r\n            <div>\r\n                <input onBlur={ deactivateEditMode } autoFocus={ true } onChange={ onStatusChange } value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img\r\n                    src=\"https://p.bigstockphoto.com/GeFvQkBbSLaMdpKXF1Zv_bigstock-Aerial-View-Of-Blue-Lakes-And--227291596.jpg\"\r\n                    alt=\"\"/>\r\n                    <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large}/>\r\n                <span className={s.span}><b>Имя:</b> {props.profile.fullName}</span>\r\n                <span><b>Обо мне:</b> {props.profile.aboutMe}</span>\r\n                <span><b>Контакты: </b>{props.profile.contacts.vk}</span>\r\n                <span><b>Ищу работу: </b>{(props.profile.lookingForAJob) ? 'да' : 'нет'}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src=\"https://cdn1.iconfinder.com/data/icons/diversity-avatars-volume-01-circles/64/matrix-morpheus-512.png\"\r\n                alt=\"\"/>\r\n            { props.message }\r\n            <div>\r\n                <span>{props.likesCount} Likes</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\nimport {Element} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst Textarea = Element('textarea')\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPostsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Add post\"} name={\"PostMessage\"}\r\n                       component={Textarea} validate={[requiredField, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MyPostsReduxForm = reduxForm({form: 'addPost'})(MyPostsForm)\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements = props.posts.map( p => <Post message={p.message} likesCount={p.likesCount} key={p.id}/>)\r\n\r\n    const onSubmit = (formData) => {\r\n        debugger\r\n        props.addPost(formData.PostMessage)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My Posts</h3>\r\n            <MyPostsReduxForm onSubmit={onSubmit}/>\r\n            <div className={s.posts}>\r\n                { postsElements }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (text) => {dispatch(addPostActionCreator(text))}\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n)(ProfileContainer)"],"sourceRoot":""}