{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","className","s","dialog","dialogName","name","Message","message","src","avatar","alt","peerName","Textarea","Element","maxLength50","maxLengthCreator","DialogsForm","onSubmit","handleSubmit","form","test","event","reset","placeholder","component","validate","onKeyDown","e","key","btnSendMess","compose","dialogsPage","dispatch","sendMessage","text","addMessageActionCreator","dialogsElements","dialogs","map","d","messagesElements","messages","m","chatHeader","btnWrapDiv","btnBack","chatPeerName","lastSeen","chatHeaderImg","formData","DialogMessage","dialogSidebar"],"mappings":"gNAIIA,EAA6B,SAACC,GAC9B,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIdE,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAI,eAHV,GACXC,IAAML,WAQtC,OAFqCM,YAAQX,EAARW,CAAoCL,K,oBChB7EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,0BAA0B,WAAa,4BAA4B,cAAgB,+BAA+B,aAAe,8BAA8B,SAAW,0BAA0B,WAAa,4BAA4B,QAAU,yBAAyB,KAAO,sBAAsB,YAAc,6BAA6B,cAAgB,iC,oBCAxaD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,WAAa,iC,oBCAnED,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,4B,+GCGnDC,EAAa,SAACN,GACvB,IAAIO,EAAO,YAAcP,EAAMQ,GAE/B,OACI,yBAAKC,UAAWC,IAAEC,QACd,kBAAC,IAAD,CAASV,GAAIM,GACT,yBAAKE,UAAWC,IAAEE,YACbZ,EAAMa,S,mCCPdC,EAAU,SAACd,GACpB,OACI,yBAAKS,UAAWC,IAAEK,SACd,yBAAKC,IAAKC,IAAQC,IAAI,KACtB,6BACI,yBAAKT,UAAWC,IAAES,UAAlB,aACCnB,EAAMe,W,gCCCjBK,EAAWC,YAAQ,YACnBC,EAAcC,YAAiB,IAE/BC,EAAc,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAClB,OACI,kBAAC,IAAD,CAAMA,SAAUA,IACX,gBAAEC,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,KAAhB,OACG,0BAAMlB,UAAWC,IAAEkB,KAAMH,SAAU,SAAAI,GAC/BH,EAAaG,GACbF,EAAKG,UAEL,kBAAC,IAAD,CAAOC,YAAa,qBAAsBlB,KAAM,gBAAiBmB,UAAWZ,EACpEa,SAAUX,EAAaY,UAAW,SAAAC,GAChB,UAAVA,EAAEC,MACFV,EAAaS,GACbR,EAAKG,YAIrB,4BAAQrB,UAAWC,IAAE2B,mB,yBCT1BC,sBACXnC,aAfkB,SAACV,GACnB,MAAO,CACH8C,YAAa9C,EAAM8C,gBAKF,SAACC,GACtB,MAAO,CACHC,YAAa,SAACC,GAAUF,EAASG,YAAwBD,SAO7D9C,IAFW0C,EDgBQ,SAACtC,GAEpB,IAAIP,EAAQO,EAAMuC,YAEdK,EAAkBnD,EAAMoD,QAAQC,KAAK,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYlC,KAAMkC,EAAElC,KAAMuB,IAAKW,EAAEvC,GAAIA,GAAIuC,EAAEvC,QACrFwC,EAAmBvD,EAAMwD,SAASH,KAAK,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAASnC,QAASmC,EAAEnC,QAASqB,IAAKc,EAAE1C,QAOpF,OAAIR,EAAMN,OAGN,yBAAKe,UAAWC,IAAEmC,SACd,yBAAKpC,UAAWC,IAAEuC,UACd,yBAAKxC,UAAWC,IAAEyC,YACd,yBAAK1C,UAAWC,IAAE0C,YACd,kBAAC,IAAD,CAASnD,GAAI,WAAYQ,UAAWC,IAAE2C,SAAtC,SAEJ,yBAAK5C,UAAWC,IAAE4C,cAAlB,sBACA,yBAAK7C,UAAWC,IAAE6C,UAAlB,kCACA,yBAAK9C,UAAWC,IAAE8C,eACd,yBAAKxC,IAAKC,IAAQC,IAAI,OAG5B8B,EACF,kBAAC,EAAD,CAAavB,SApBR,SAACgC,GACdzD,EAAMyC,YAAYgB,EAASC,mBAqBvB,yBAAKjD,UAAWC,IAAEiD,eACZf,IAnBW,kBAAC,IAAD,CAAU3C,GAAI","file":"static/js/4.112a1535.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1pDwE\",\"messages\":\"Dialogs_messages__3hvEc\",\"chatHeader\":\"Dialogs_chatHeader__7aUjx\",\"chatHeaderImg\":\"Dialogs_chatHeaderImg__1KXqP\",\"chatPeerName\":\"Dialogs_chatPeerName__2SgbK\",\"lastSeen\":\"Dialogs_lastSeen__2PThB\",\"btnWrapDiv\":\"Dialogs_btnWrapDiv__3o7XB\",\"btnBack\":\"Dialogs_btnBack__uQA5t\",\"test\":\"Dialogs_test__2mLvW\",\"btnSendMess\":\"Dialogs_btnSendMess__2umvX\",\"dialogSidebar\":\"Dialogs_dialogSidebar__3goJC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__2EQNi\",\"dialogName\":\"DialogItem_dialogName__28KNn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__34WG8\",\"peerName\":\"Message_peerName___EBu7\"};","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./DialogItem.module.css\"\r\n\r\nexport const DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id\r\n\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path}>\r\n                <div className={s.dialogName}>\r\n                    {props.name}\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport avatar from \"../../../assets/images/upload_profile_photo.png\"\r\nimport s from \"./Message.module.css\";\r\n\r\nexport const Message = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            <img src={avatar} alt=\"\"/>\r\n            <div>\r\n                <div className={s.peerName}>Vladislav</div>\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {Redirect, NavLink} from \"react-router-dom\";\r\nimport {Field, Form} from \"react-final-form\";\r\nimport {Element} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator} from \"../../utils/validators/validators\";\r\nimport avatar from \"../../assets/images/upload_profile_photo.png\"\r\n\r\n\r\nconst Textarea = Element('textarea')\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst DialogsForm = ({onSubmit}) => {\r\n    return (\r\n        <Form onSubmit={onSubmit}>\r\n            {({handleSubmit, form}) => (\r\n                <form className={s.test} onSubmit={event => {\r\n                    handleSubmit(event)\r\n                    form.reset()\r\n                }}>\r\n                    <Field placeholder={\"Write a message...\"} name={\"DialogMessage\"} component={Textarea}\r\n                            validate={maxLength50} onKeyDown={e => {\r\n                                if (e.key === 'Enter') {\r\n                                    handleSubmit(e)\r\n                                    form.reset()\r\n                                }\r\n                    }}/>\r\n\r\n                    <button className={s.btnSendMess}></button>\r\n                </form>\r\n            )}\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport const Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id}/> )\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id} /> )\r\n\r\n\r\n    const onSubmit = (formData) => {\r\n        props.sendMessage(formData.DialogMessage)\r\n    }\r\n\r\n    if(!props.isAuth) return <Redirect to={\"/login\"}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.messages}>\r\n                <div className={s.chatHeader}>\r\n                    <div className={s.btnWrapDiv}>\r\n                        <NavLink to={'/dialogs'} className={s.btnBack}>Back</NavLink>\r\n                    </div>\r\n                    <div className={s.chatPeerName}>Vladislav Sviridov</div>\r\n                    <div className={s.lastSeen}>last seen yesterday at 9:14 pm</div>\r\n                    <div className={s.chatHeaderImg}>\r\n                        <img src={avatar} alt=\"\"/>\r\n                    </div>\r\n                </div>\r\n                { messagesElements }\r\n                <DialogsForm onSubmit={onSubmit}/>\r\n            </div>\r\n            <div className={s.dialogSidebar}>\r\n                { dialogsElements }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (text) => {dispatch(addMessageActionCreator(text))}\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}